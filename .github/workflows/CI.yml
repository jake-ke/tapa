name: CI

on:
  push:
    tags:
      - "*"
    branches-ignore:
      - "**/docs?"
  pull_request:
    branches-ignore:
      - "**/docs?"

jobs:
  build-cpp:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04

    steps:
      - name: Checkout myself
        uses: actions/checkout@v4
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}
          append-timestamp: false
      - name: Install dependencies
        run: |
          sudo apt-get purge -y libgcc-*-dev || true
          ./.github/scripts/install-build-deps.sh
          ./.github/scripts/setup-github-hosted.sh
      - name: Configure myself
        run: |
          cmake \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_C_COMPILER_LAUNCHER=ccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -S . -B build -G Ninja
      - name: Build myself
        run: cmake --build build --target all
      - name: Test myself
        run: cmake --build build --target test
      - name: Package myself
        run: cmake --build build --target package
      - name: Upload deb package
        uses: actions/upload-artifact@v4
        with:
          name: tapa-cpp-${{ matrix.os }}
          path: |
            build/tapa_*.deb
            build/tapa-*.tar.*

  release-cpp:
    if: github.event_name == 'push' && github.repository == 'Blaok/tapa' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    concurrency: release-cpp
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
    needs:
      - build-cpp
    steps:
      - name: Checkout myself
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: tapa-cpp-${{ matrix.os }}
          path: build
      - name: Cache APT database
        uses: actions/cache@v4
        with:
          path: apt-db-cache
          key: ${{ runner.os }}-apt-db-cache
      - name: Update APT repository
        run: ./.github/scripts/upload-apt-repo.sh
        env:
          BUILD_DIR: build
          CACHE_DIR: apt-db-cache
          LABEL: Extending High-Level Synthesis for Task-Parallel Programs
          GPG_KEY: ${{ secrets.GPG_KEY }}
          SSH_KEY: ${{ secrets.SSH_KEY }}

  build-python:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install build
        run: pip install --upgrade build
      - name: Checkout myself
        uses: actions/checkout@v4
      - name: Build myself
        run: python -m build backend/python
      - name: Upload whl package
        uses: actions/upload-artifact@v4
        with:
          name: tapa-python
          path: backend/python/dist/*.whl
      - name: Publish to PyPI
        if: github.event_name == 'push' && github.repository == 'Blaok/tapa' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: backend/python/dist/

  find-apps:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout myself
        uses: actions/checkout@v4
      - name: Find apps
        id: apps
        working-directory: apps
        run: |
          {
            printf 'apps='
            find * -mindepth 0 -maxdepth 0 -type d |
              jq --raw-input . |
              jq --compact-output --slurp .
          } >>"${GITHUB_OUTPUT}"

  cosim-apps:
    if: github.repository == 'rapidstream-org/rapidstream-tapa'

    needs:
      - build-cpp
      - build-python
      - find-apps

    runs-on:
      - self-hosted
      - Linux
      - xilinx-tools

    strategy:
      fail-fast: false
      matrix:
        xocl-platform:
          - xilinx_u250_gen3x16_xdma_4_1_202210_1
        xocl-version:
          - "2023.2"
        app: ${{ fromJSON(needs.find-apps.outputs.apps) }}

    env:
      XILINX_HLS: /opt/tools/xilinx/Vitis_HLS/${{ matrix.xocl-version }}
      XILINX_VITIS: /opt/tools/xilinx/Vitis/${{ matrix.xocl-version }}
      XILINX_VIVADO: /opt/tools/xilinx/Vivado/${{ matrix.xocl-version }}

    steps:
      - name: Checkout myself
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake \

          eval "$(grep ^VERSION_ID /etc/os-release)"
          export TAPA_DEB="$(ls ./artifacts/tapa-cpp-ubuntu-"${VERSION_ID}"/*.deb)"
          export TAPA_WHL="$(ls artifacts/tapa-python/*.whl)"
          [[ -n "${TAPA_DEB}" ]]
          [[ -n "${TAPA_WHL}" ]]
          ./install.sh
      - name: Configure app
        run: |
          cmake \
            -S apps/${{ matrix.app }} \
            -B apps/${{ matrix.app }}/build \
            -D PLATFORM=${{ matrix.xocl-platform }}
      - name: Test app
        run: |
          source "${XILINX_VITIS}/settings64.sh"
          make -C apps/${{ matrix.app }}/build ${{ matrix.app }}-cosim

  cosim:
    runs-on: ubuntu-latest
    needs:
      - cosim-apps
    steps:
      - run: echo PASS
